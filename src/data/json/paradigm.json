{"0": {"name": "data-driven programming", "description": "programming paradigm"}, "1": {"name": "procedural programming", "description": "programming paradigm"}, "2": {"name": "imperative programming", "description": "type of programming paradigm in computer science"}, "3": {"name": "concurrent object-oriented programming", "description": "programming paradigm that combines object-oriented programming (OOP) together with concurrency"}, "4": {"name": "constraint programming", "description": "programming paradigm wherein relations between variables are stated in the form of constraints"}, "5": {"name": "object-oriented programming", "description": "programming paradigm based on the concept of objects"}, "6": {"name": "class-based programming", "description": "object-oriented programming paradigm"}, "7": {"name": "parallel computing", "description": "programming paradigm in which many calculations or the execution of processes are carried out simultaneously"}, "8": {"name": "Natural-language programming", "description": "Language-oriented programming paradigm"}, "9": {"name": "reflective programming", "description": "ability of a process to examine and modify itself"}, "10": {"name": "visual programming language", "description": "computer programming language to create programs by manipulating program elements graphically"}, "11": {"name": "constraint logic programming", "description": "Programming paradigm which combines logic programming and constraint satisfaction"}, "12": {"name": "event-driven programming", "description": "programming paradigm"}, "13": {"name": "declarative programming", "description": "programming paradigm that expresses the logic of a computation without describing its control flow"}, "14": {"name": "prototype-based programming", "description": "style of object-oriented programming"}, "15": {"name": "reactive programming", "description": "programming paradigm focused on data flow and change propragation"}, "16": {"name": "concurrent computing", "description": "form of computing in which several computations are executing during overlapping time periods"}, "17": {"name": "synchronous programming", "description": "programming paradigm supported by synchronous programming languages"}, "18": {"name": "modular programming", "description": "boo mmm"}, "19": {"name": "agent-oriented programming", "description": "programming paradigm centred on the concept of software agents"}, "20": {"name": "array programming", "description": "programming paradigm that generalize operations on scalars to apply transparently to higher-dimensional arrays"}, "21": {"name": "functional programming", "description": "programming paradigm"}, "22": {"name": "dataflow programming", "description": "programming paradigm that models program as a directed graph of data flow between operations"}, "23": {"name": "concatenative programming", "description": "point-free programming paradigm"}, "24": {"name": "functional reactive programming", "description": "programming paradigm for reactive programming using key features of functional programming"}, "25": {"name": "metaprogramming", "description": "programming paradigm"}, "26": {"name": "concurrent constraint logic programming", "description": ""}, "27": {"name": "logic programming", "description": "programming paradigm based on formal logic"}, "28": {"name": "purely functional programming", "description": "programming paradigm that treats all computation as the evaluation of mathematical functions"}, "29": {"name": "process-oriented programming", "description": ""}, "30": {"name": "aspect-oriented programming", "description": "programming paradigm"}, "31": {"name": "function-level programming", "description": "programming paradigm"}, "32": {"name": "generic programming", "description": "way of designing and writing programs where algorithms are written in terms of parametric types enabling easy reuse"}, "33": {"name": "stack-oriented programming", "description": "programming paradigm that relies on a stack machine model"}, "34": {"name": "language-oriented programming", "description": "programming paradigm"}, "35": {"name": "tacit programming", "description": "programming paradigm"}, "36": {"name": "structured programming", "description": "programming paradigm aimed at improving clarity, quality, and development time by using control structures"}}